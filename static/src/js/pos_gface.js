odoo.define('pos_gface.pos_gface', function (require) {
"use strict";

var models = require('point_of_sale.models');
var screens = require('point_of_sale.screens');
var rpc = require('web.rpc');

models.PosModel = models.PosModel.extend({
    push_and_invoice_order: function(order){
        var self = this;
        var invoiced = new $.Deferred();

        if(!order.get_client()){
            invoiced.reject({code:400, message:'Missing Customer', data:{}});
            return invoiced;
        }

        var order_id = this.db.add_order(order.export_as_JSON());

        this.flush_mutex.exec(function(){
            var done = new $.Deferred(); // holds the mutex

            var transfer = self._flush_orders([self.db.get_order(order_id)], {timeout:60000, to_invoice:true});

            transfer.fail(function(error){
                invoiced.reject(error);
                done.reject();
            });

            // on success, get the order id generated by the server
            transfer.pipe(function(order_server_id){
                if (order_server_id.length > 0) {
                    rpc.query({
                            model: 'pos.order',
                            method: 'search_read',
                            args: [[['id', '=', order_server_id[0]]], ["firma_fel", "serie_fel", "numero_fel"]],
                        }, {
                            timeout: 3000,
                        }).then(function (orders) {
                            if (orders.length > 0) {
                                self.get_order().firma_fel = orders[0].firma_fel
                                self.get_order().serie_fel = orders[0].serie_fel
                                self.get_order().numero_fel = orders[0].numero_fel
                                
                                invoiced.resolve();
                                done.resolve();
                            }
                        });
                } else {
                    rpc.query({
                            model: 'pos.order',
                            method: 'search_read',
                            args: [[['pos_reference', '=', order.name]], ["firma_fel", "serie_fel", "numero_fel"]],
                        }, {
                            timeout: 3000,
                        }).then(function (orders) {
                            if (orders.length > 0) {
                                self.get_order().firma_fel = orders[0].firma_fel
                                self.get_order().serie_fel = orders[0].serie_fel
                                self.get_order().numero_fel = orders[0].numero_fel
                                invoiced.resolve();
                                done.resolve();
                            }
                        });
                }
            });

            return done;

        });

        return invoiced;
    }
})

});
